var q=Object.defineProperty;var p=(e,t)=>{for(var o in t)q(e,o,{get:t[o],enumerable:!0})};var h=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var x=new Map,y=0;function d(e){self.postMessage(e)}h&&(globalThis.syscall=async(e,...t)=>await new Promise((o,n)=>{y++,x.set(y,{resolve:o,reject:n}),d({type:"sys",id:y,name:e,args:t})}));function b(e,t){h&&(self.addEventListener("message",o=>{(async()=>{let n=o.data;switch(n.type){case"inv":{let c=e[n.name];if(!c)throw new Error(`Function not loaded: ${n.name}`);try{let a=await Promise.resolve(c(...n.args||[]));d({type:"invr",id:n.id,result:a})}catch(a){console.error("An exception was thrown as a result of invoking function",n.name,"error:",a.message),d({type:"invr",id:n.id,error:a.message})}}break;case"sysr":{let c=n.id,a=x.get(c);if(!a)throw Error("Invalid request id");x.delete(c),n.error?a.reject(new Error(n.error)):a.resolve(n.result)}break}})().catch(console.error)}),d({type:"manifest",manifest:t}))}function j(e){let t=atob(e),o=t.length,n=new Uint8Array(o);for(let c=0;c<o;c++)n[c]=t.charCodeAt(c);return n}function A(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",o=e.byteLength;for(let n=0;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}async function Y(e,t){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?A(o):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function Q(){globalThis.fetch=async function(e,t){let o=t&&t.body?A(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,n=await Y(e,t&&{method:t.method,headers:t.headers,base64Body:o});return new Response(n.base64Body?j(n.base64Body):null,{status:n.status,headers:n.headers})}}h&&Q();function P(e,t){if(t(e))return[e];let o=[];if(e.children)for(let n of e.children)o=[...o,...P(n,t)];return o}function f(e,t){return P(e,o=>o.type===t)[0]}function w(e,t){P(e,t)}var i={};p(i,{confirm:()=>be,copyToClipboard:()=>Ee,dispatch:()=>we,downloadFile:()=>ue,filterBox:()=>de,flashNotification:()=>me,fold:()=>Ce,foldAll:()=>Me,getCurrentPage:()=>V,getCursor:()=>X,getSelection:()=>Z,getText:()=>z,getUiOption:()=>Ae,goHistory:()=>le,hidePanel:()=>ge,insertAtCursor:()=>Pe,insertAtPos:()=>ye,moveCursor:()=>he,navigate:()=>re,openCommandPalette:()=>ne,openPageNavigator:()=>oe,openSearchPanel:()=>He,openUrl:()=>ce,prompt:()=>ve,redo:()=>ke,reloadPage:()=>ie,reloadSettingsAndCommands:()=>ae,reloadUI:()=>se,replaceRange:()=>xe,save:()=>te,setPage:()=>_,setSelection:()=>ee,setText:()=>J,setUiOption:()=>Te,showPanel:()=>fe,toggleFold:()=>Fe,undo:()=>Ne,unfold:()=>De,unfoldAll:()=>Ue,uploadFile:()=>pe,vimEx:()=>Se});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function V(){return r("editor.getCurrentPage")}function _(e){return r("editor.setPage",e)}function z(){return r("editor.getText")}function J(e){return r("editor.setText",e)}function X(){return r("editor.getCursor")}function Z(){return r("editor.getSelection")}function ee(e,t){return r("editor.setSelection",e,t)}function te(){return r("editor.save")}function re(e,t=!1,o=!1){return r("editor.navigate",e,t,o)}function oe(e="page"){return r("editor.openPageNavigator",e)}function ne(){return r("editor.openCommandPalette")}function ie(){return r("editor.reloadPage")}function se(){return r("editor.reloadUI")}function ae(){return r("editor.reloadSettingsAndCommands")}function ce(e,t=!1){return r("editor.openUrl",e,t)}function le(e){return r("editor.goHistory",e)}function ue(e,t){return r("editor.downloadFile",e,t)}function pe(e,t){return r("editor.uploadFile",e,t)}function me(e,t="info"){return r("editor.flashNotification",e,t)}function de(e,t,o="",n=""){return r("editor.filterBox",e,t,o,n)}function fe(e,t,o,n=""){return r("editor.showPanel",e,t,o,n)}function ge(e){return r("editor.hidePanel",e)}function ye(e,t){return r("editor.insertAtPos",e,t)}function xe(e,t,o){return r("editor.replaceRange",e,t,o)}function he(e,t=!1){return r("editor.moveCursor",e,t)}function Pe(e){return r("editor.insertAtCursor",e)}function we(e){return r("editor.dispatch",e)}function ve(e,t=""){return r("editor.prompt",e,t)}function be(e){return r("editor.confirm",e)}function Ae(e){return r("editor.getUiOption",e)}function Te(e,t){return r("editor.setUiOption",e,t)}function Se(e){return r("editor.vimEx",e)}function Ce(){return r("editor.fold")}function De(){return r("editor.unfold")}function Fe(){return r("editor.toggleFold")}function Me(){return r("editor.foldAll")}function Ue(){return r("editor.unfoldAll")}function Ne(){return r("editor.undo")}function ke(){return r("editor.redo")}function He(){return r("editor.openSearchPanel")}function Ee(e){return r("editor.copyToClipboard",e)}var g={};p(g,{parseMarkdown:()=>Ke});function Ke(e){return r("markdown.parseMarkdown",e)}var l={};p(l,{deleteAttachment:()=>Ye,deleteFile:()=>Je,deletePage:()=>Be,getAttachmentMeta:()=>$e,getFileMeta:()=>_e,getPageMeta:()=>Re,listAttachments:()=>Oe,listFiles:()=>Qe,listPages:()=>Ge,listPlugs:()=>Le,readAttachment:()=>qe,readFile:()=>Ve,readPage:()=>Ie,writeAttachment:()=>je,writeFile:()=>ze,writePage:()=>We});function Ge(e=!1){return r("space.listPages",e)}function Re(e){return r("space.getPageMeta",e)}function Ie(e){return r("space.readPage",e)}function We(e,t){return r("space.writePage",e,t)}function Be(e){return r("space.deletePage",e)}function Le(){return r("space.listPlugs")}function Oe(){return r("space.listAttachments")}function $e(e){return r("space.getAttachmentMeta",e)}function qe(e){return r("space.readAttachment",e)}function je(e,t){return r("space.writeAttachment",e,t)}function Ye(e){return r("space.deleteAttachment",e)}function Qe(){return r("space.listFiles")}function Ve(e){return r("space.readFile",e)}function _e(e){return r("space.getFileMeta",e)}function ze(e,t){return r("space.writeFile",e,t)}function Je(e){return r("space.deleteFile",e)}var s={};p(s,{run:()=>at});function at(e,t){return r("shell.run",e,t)}var m={};p(m,{parse:()=>ct,stringify:()=>lt});function ct(e){return r("yaml.parse",e)}function lt(e){return r("yaml.stringify",e)}async function mt(e,t){let o=await l.readPage(e),n=await g.parseMarkdown(o),c;return w(n,a=>{if(a.type!=="FencedCode")return!1;let u=f(a,"CodeInfo");if(t&&!u||t&&!t.includes(u.children[0].text))return!1;let v=f(a,"CodeText");return v?(c=v.children[0].text,!0):!1}),c}async function T(e,t=["yaml"]){let o=await mt(e,t);if(o!==void 0)try{return m.parse(o)}catch(n){throw console.error("YAML Page parser error",n),new Error(`YAML Error: ${n.message}`)}}var dt="SETTINGS";async function S(e,t){try{let n=(await T(dt,["yaml"])||{})[e];return n===void 0?t:n}catch(o){if(o.message==="Not found")return t;throw o}}function D(e,t,o=!1){if(C(e)&&!C(t)){let n=e.split("/")[0];return o&&(n=ft(n)),`${n}/${t}`}else return t}function ft(e){return e.startsWith("!")&&(e=e.substring(1),e.startsWith("localhost")?e="http://"+e:e="https://"+e),e}function C(e){return e.startsWith("!")}var gt=100;async function yt(e){let t=await S("maximumAttachmentSize",gt);if(typeof t!="number"&&await i.flashNotification("The setting 'maximumAttachmentSize' must be a number","error"),e.content.length>t*1024*1024){i.flashNotification(`Attachment is too large, maximum is ${t}MiB`,"error");return}let o=await i.prompt("File name for pasted attachment",e.name);if(!o)return;o=o.split(" ").join("-");let n=D(await i.getCurrentPage(),await i.getCurrentPage()+"/"+o);await l.writeAttachment(n,e.content);let c="",a="";if(c==="wikilink")a=`[[${n}]]`;else{let u=await i.getCurrentPage();u=u.split(" ").join("-"),a=`[${o}](${u.split("/").pop()+"/"+o})`}e.contentType.startsWith("image/")&&(a="!"+a),i.insertAtCursor(a)}async function F(e,t,o){let n=await i.uploadFile(t,o);await yt(n)}async function M(){console.log("npm install");try{let{code:e}=await s.run("npm",["install"]);console.log(e)}catch{}console.log("Npm Install Done!"),await i.flashNotification("Npm Install Done! ")}async function U(){console.log("hexo init");try{let{code:e}=await s.run("hexo",["init"]);console.log(e)}catch{}console.log("Hexo Init Done!"),await i.flashNotification("Hexo Init Done.")}async function N(){console.log("hexo new");let e=await i.prompt("New article layout(void to default layout):"),t=await i.prompt("New article title:");if(t){try{let{code:o}=await s.run("hexo",["new",e,t]);console.log(o)}catch{}console.log("Hexo New Done!"),await i.flashNotification("Hexo New Done!")}}async function k(){console.log("hexo generate");try{let{code:e}=await s.run("hexo",["generate"]);console.log(e)}catch{}console.log("Hexo Generate Done!"),await i.flashNotification("Hexo Generate Done!")}async function H(){console.log("hexo clean");try{let{code:e}=await s.run("hexo",["clean"]);console.log(e)}catch{}console.log("Hexo Clean Done!"),await i.flashNotification("Hexo Clean Done!")}async function E(){console.log("hexo server");try{let{code:e}=await s.run("hexo",["server","&"]);console.log(e)}catch{}console.log("Hexo Server Done!"),await i.flashNotification("Hexo Server Done!")}async function K(){console.log("hexo deploy");try{let{code:e}=await s.run("hexo",["deploy"]);console.log(e)}catch{}console.log("Hexo Deploy Done!"),await i.flashNotification("Hexo Deploy Done!")}async function G(){console.log("hexo generate && hexo deploy");try{let{code1:e}=await s.run("hexo",["generate"]);console.log(e);let{code2:t}=await s.run("hexo",["deploy"]);console.log(t)}catch{}console.log("Hexo Generate and Deploy Done!"),await i.flashNotification("Hexo Generate and Deploy Done!")}async function R(){console.log("killall hexo");try{let{code:e}=await s.run("killall",["hexo"]);console.log(e)}catch{}console.log("Hexo Stop Server Done!"),await i.flashNotification("Hexo Stop Server Done!")}async function I(){console.log("git commit");let e=await i.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e);try{let{code:t}=await s.run("git",["commit","-a","-m",e]);console.log("Git commit code",t)}catch{}console.log("Hexo Git Commit Done!"),await i.flashNotification("Hexo Git Commit Done!")}async function W(){console.log("git push");let{code:e}=await s.run("git",["push"]);console.log("Git push code",e),console.log("Hexo Git Push Done!"),await i.flashNotification("Hexo Git Push Done!")}async function B(){console.log("git add . && git commit && git push");let e=await i.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),console.log("Snapshotting the current space to git with commit message");let{code1:t}=await s.run("git",["add","./*"]);console.log("Git add code",t);try{let{code2:n}=await s.run("git",["commit","-a","-m",e]);console.log("Git commit code",n)}catch{}let{code3:o}=await s.run("git",["push"]);console.log("Git push code",o),console.log("Hexo Git Commit and Push Done!"),await i.flashNotification("Hexo Git Commit and Push Done!")}async function L(){let e=await i.prompt("Github Deploy(site) project URL (like: https://github.com/user/user.github.io):");if(!e)return;let t=await i.prompt("Github token:");if(!t)return;let o=e.split("/");o[2]=`${t}@${o[2]}`,e=o.join("/")+".git",await i.flashNotification("Now going to clone the deploy(site) repo, this may take some time."),await s.run("git",["clone",e,".deploy_git"]),console.log("Hexo Clone Deploy Repo Done!"),await i.flashNotification("Hexo Clone Deploy Repo Done!")}var O={uploadFile:F,npmInstall:M,init:U,newArticle:N,generate:k,clean:H,server:E,deploy:K,generateDeploy:G,stopServer:R,gitCommit:I,gitPush:W,gitCommitPush:B,gitCloneDeployRepo:L},$={name:"hexo",requiredPermissions:["shell"],functions:{uploadFile:{path:"hexo.ts:uploadFile",command:{name:"Hexo: Upload File"}},npmInstall:{path:"hexo.ts:npmInstall",command:{name:"Hexo: Npm Install"}},init:{path:"hexo.ts:init",command:{name:"Hexo: Init"}},newArticle:{path:"hexo.ts:newArticle",command:{name:"Hexo: New"}},generate:{path:"hexo.ts:generate",command:{name:"Hexo: Generate"}},clean:{path:"hexo.ts:clean",command:{name:"Hexo: Clean"}},server:{path:"hexo.ts:server",command:{name:"Hexo: Server"}},deploy:{path:"hexo.ts:deploy",command:{name:"Hexo: Deploy"}},generateDeploy:{path:"hexo.ts:generateDeploy",command:{name:"Hexo: Generate and Deploy"}},stopServer:{path:"hexo.ts:stopServer",command:{name:"Hexo: Stop Server"}},gitCommit:{path:"hexo.ts:gitCommit",command:{name:"Hexo: Git Commit"}},gitPush:{path:"hexo.ts:gitPush",command:{name:"Hexo: Git Push"}},gitCommitPush:{path:"hexo.ts:gitCommitPush",command:{name:"Hexo: Git Commit Push"}},gitCloneDeployRepo:{path:"hexo.ts:gitCloneDeployRepo",command:{name:"Hexo: Git Clone Deploy Repo"}}},assets:{}},yr={manifest:$,functionMapping:O};b(O,$);export{yr as plug};

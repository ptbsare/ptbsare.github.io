var Y=Object.defineProperty;var p=(e,t)=>{for(var n in t)Y(e,n,{get:t[n],enumerable:!0})};var h=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var x=new Map,y=0;function d(e){self.postMessage(e)}h&&(globalThis.syscall=async(e,...t)=>await new Promise((n,i)=>{y++,x.set(y,{resolve:n,reject:i}),d({type:"sys",id:y,name:e,args:t})}));function v(e,t){h&&(self.addEventListener("message",n=>{(async()=>{let i=n.data;switch(i.type){case"inv":{let c=e[i.name];if(!c)throw new Error(`Function not loaded: ${i.name}`);try{let s=await Promise.resolve(c(...i.args||[]));d({type:"invr",id:i.id,result:s})}catch(s){console.error("An exception was thrown as a result of invoking function",i.name,"error:",s.message),d({type:"invr",id:i.id,error:s.message})}}break;case"sysr":{let c=i.id,s=x.get(c);if(!s)throw Error("Invalid request id");x.delete(c),i.error?s.reject(new Error(i.error)):s.resolve(i.result)}break}})().catch(console.error)}),d({type:"manifest",manifest:t}))}function Q(e){let t=atob(e),n=t.length,i=new Uint8Array(n);for(let c=0;c<n;c++)i[c]=t.charCodeAt(c);return i}function b(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",n=e.byteLength;for(let i=0;i<n;i++)t+=String.fromCharCode(e[i]);return btoa(t)}async function V(e,t){if(typeof e!="string"){let n=new Uint8Array(await e.arrayBuffer()),i=n.length>0?b(n):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:i},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function _(){globalThis.fetch=async function(e,t){let n=t&&t.body?b(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,i=await V(e,t&&{method:t.method,headers:t.headers,base64Body:n});return new Response(i.base64Body?Q(i.base64Body):null,{status:i.status,headers:i.headers})}}h&&_();function P(e,t){if(t(e))return[e];let n=[];if(e.children)for(let i of e.children)n=[...n,...P(i,t)];return n}function f(e,t){return P(e,n=>n.type===t)[0]}function w(e,t){P(e,t)}var o={};p(o,{confirm:()=>Ce,copyToClipboard:()=>ke,dispatch:()=>ve,downloadFile:()=>me,filterBox:()=>ge,flashNotification:()=>fe,fold:()=>He,foldAll:()=>Fe,getCurrentPage:()=>z,getCursor:()=>ee,getSelection:()=>te,getText:()=>X,getUiOption:()=>Ae,goHistory:()=>pe,hidePanel:()=>xe,insertAtCursor:()=>Se,insertAtPos:()=>he,moveCursor:()=>we,navigate:()=>ne,openCommandPalette:()=>ae,openPageNavigator:()=>ie,openSearchPanel:()=>Ge,openUrl:()=>ue,prompt:()=>be,redo:()=>Ee,reloadPage:()=>se,reloadSettingsAndCommands:()=>le,reloadUI:()=>ce,replaceRange:()=>Pe,save:()=>oe,setPage:()=>J,setSelection:()=>re,setText:()=>Z,setUiOption:()=>Te,showPanel:()=>ye,toggleFold:()=>De,undo:()=>Ue,unfold:()=>Re,unfoldAll:()=>Me,uploadFile:()=>de,vimEx:()=>Ne});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function z(){return r("editor.getCurrentPage")}function J(e){return r("editor.setPage",e)}function X(){return r("editor.getText")}function Z(e){return r("editor.setText",e)}function ee(){return r("editor.getCursor")}function te(){return r("editor.getSelection")}function re(e,t){return r("editor.setSelection",e,t)}function oe(){return r("editor.save")}function ne(e,t=!1,n=!1){return r("editor.navigate",e,t,n)}function ie(e="page"){return r("editor.openPageNavigator",e)}function ae(){return r("editor.openCommandPalette")}function se(){return r("editor.reloadPage")}function ce(){return r("editor.reloadUI")}function le(){return r("editor.reloadSettingsAndCommands")}function ue(e,t=!1){return r("editor.openUrl",e,t)}function pe(e){return r("editor.goHistory",e)}function me(e,t){return r("editor.downloadFile",e,t)}function de(e,t){return r("editor.uploadFile",e,t)}function fe(e,t="info"){return r("editor.flashNotification",e,t)}function ge(e,t,n="",i=""){return r("editor.filterBox",e,t,n,i)}function ye(e,t,n,i=""){return r("editor.showPanel",e,t,n,i)}function xe(e){return r("editor.hidePanel",e)}function he(e,t){return r("editor.insertAtPos",e,t)}function Pe(e,t,n){return r("editor.replaceRange",e,t,n)}function we(e,t=!1){return r("editor.moveCursor",e,t)}function Se(e){return r("editor.insertAtCursor",e)}function ve(e){return r("editor.dispatch",e)}function be(e,t=""){return r("editor.prompt",e,t)}function Ce(e){return r("editor.confirm",e)}function Ae(e){return r("editor.getUiOption",e)}function Te(e,t){return r("editor.setUiOption",e,t)}function Ne(e){return r("editor.vimEx",e)}function He(){return r("editor.fold")}function Re(){return r("editor.unfold")}function De(){return r("editor.toggleFold")}function Fe(){return r("editor.foldAll")}function Me(){return r("editor.unfoldAll")}function Ue(){return r("editor.undo")}function Ee(){return r("editor.redo")}function Ge(){return r("editor.openSearchPanel")}function ke(e){return r("editor.copyToClipboard",e)}var g={};p(g,{parseMarkdown:()=>Ke});function Ke(e){return r("markdown.parseMarkdown",e)}var l={};p(l,{deleteAttachment:()=>Ve,deleteFile:()=>Ze,deletePage:()=>Le,getAttachmentMeta:()=>qe,getFileMeta:()=>Je,getPageMeta:()=>Oe,listAttachments:()=>je,listFiles:()=>_e,listPages:()=>Be,listPlugs:()=>$e,readAttachment:()=>Ye,readFile:()=>ze,readPage:()=>Ie,writeAttachment:()=>Qe,writeFile:()=>Xe,writePage:()=>We});function Be(e=!1){return r("space.listPages",e)}function Oe(e){return r("space.getPageMeta",e)}function Ie(e){return r("space.readPage",e)}function We(e,t){return r("space.writePage",e,t)}function Le(e){return r("space.deletePage",e)}function $e(){return r("space.listPlugs")}function je(){return r("space.listAttachments")}function qe(e){return r("space.getAttachmentMeta",e)}function Ye(e){return r("space.readAttachment",e)}function Qe(e,t){return r("space.writeAttachment",e,t)}function Ve(e){return r("space.deleteAttachment",e)}function _e(){return r("space.listFiles")}function ze(e){return r("space.readFile",e)}function Je(e){return r("space.getFileMeta",e)}function Xe(e,t){return r("space.writeFile",e,t)}function Ze(e){return r("space.deleteFile",e)}var a={};p(a,{run:()=>lt});function lt(e,t){return r("shell.run",e,t)}var m={};p(m,{parse:()=>ut,stringify:()=>pt});function ut(e){return r("yaml.parse",e)}function pt(e){return r("yaml.stringify",e)}async function ft(e,t){let n=await l.readPage(e),i=await g.parseMarkdown(n),c;return w(i,s=>{if(s.type!=="FencedCode")return!1;let u=f(s,"CodeInfo");if(t&&!u||t&&!t.includes(u.children[0].text))return!1;let S=f(s,"CodeText");return S?(c=S.children[0].text,!0):!1}),c}async function C(e,t=["yaml"]){let n=await ft(e,t);if(n!==void 0)try{return m.parse(n)}catch(i){throw console.error("YAML Page parser error",i),new Error(`YAML Error: ${i.message}`)}}var gt="SETTINGS";async function A(e,t){try{let i=(await C(gt,["yaml"])||{})[e];return i===void 0?t:i}catch(n){if(n.message==="Not found")return t;throw n}}function N(e,t,n=!1){if(T(e)&&!T(t)){let i=e.split("/")[0];return n&&(i=yt(i)),`${i}/${t}`}else return t}function yt(e){return e.startsWith("!")&&(e=e.substring(1),e.startsWith("localhost")?e="http://"+e:e="https://"+e),e}function T(e){return e.startsWith("!")}var xt=100;async function ht(e){let t=await A("maximumAttachmentSize",xt);if(typeof t!="number"&&await o.flashNotification("The setting 'maximumAttachmentSize' must be a number","error"),e.content.length>t*1024*1024){o.flashNotification(`Attachment is too large, maximum is ${t}MiB`,"error");return}let n=await o.prompt("File name for pasted attachment",e.name);if(!n)return;n=n.split(" ").join("-");let i=N(await o.getCurrentPage(),await o.getCurrentPage()+"/"+n);await l.writeAttachment(i,e.content);let c="",s="";if(c==="wikilink")s=`[[${i}]]`;else{let u=await o.getCurrentPage();u=u.split(" ").join("-"),s=`[${n}](${u.split("/").pop()+"/"+n})`}e.contentType.startsWith("image/")&&(s="!"+s),o.insertAtCursor(s)}async function H(e,t,n){let i=await o.uploadFile(t,n);await ht(i)}async function R(){console.log("npm install"),await o.flashNotification("Npm Installing...");try{let{code:e}=await a.run("npm",["install"]);console.log("Hexo npm install",e)}catch{await o.flashNotification("Npm Install ERROR. See Browser Console","error");return}console.log("Npm Install Done!"),await o.flashNotification("Npm Install Done! ")}async function D(){console.log("hexo init");try{let{code:e}=await a.run("hexo",["init"]);console.log("Hexo init code",e)}catch{await o.flashNotification("Hexo Init ERROR. See Browser Console","error");return}console.log("Hexo Init Done!"),await o.flashNotification("Hexo Init Done.")}async function F(){console.log("hexo new");let e=await o.prompt("New article layout(void to default layout):"),t=await o.prompt("New article title:");if(t){try{let{code:n}=await a.run("hexo",["new",e,t]);console.log("Hexo new code",n)}catch{await o.flashNotification("Hexo New ERROR. See Browser Console","error");return}await o.navigate("source/_posts/"+t),console.log("Hexo New Done!"),await o.flashNotification("Hexo New Done!")}}async function M(){console.log("hexo generate"),await o.flashNotification("Hexo Generating...");try{let{code:e}=await a.run("hexo",["generate"]);console.log("Hexo generate code",e)}catch{await o.flashNotification("Hexo Generate ERROR. See Browser Console","error");return}console.log("Hexo Generate Done!"),await o.flashNotification("Hexo Generate Done!")}async function U(){console.log("hexo clean");try{let{code:e}=await a.run("hexo",["clean"]);console.log("Hexo clean code",e)}catch{await o.flashNotification("Hexo Clean ERROR. See Browser Console","error");return}console.log("Hexo Clean Done!"),await o.flashNotification("Hexo Clean Done!")}async function E(){console.log("hexo server"),await o.flashNotification("Starting Hexo Server");try{let{code:e}=await a.run("hexo",["server","&"]);console.log("Hexo server code",e)}catch{}console.log("Hexo Server Done!"),await o.flashNotification("Hexo Server Done!")}async function G(){console.log("hexo deploy"),await o.flashNotification("Hexo Deploying...");try{let{code:e}=await a.run("hexo",["deploy"]);console.log("Hexo deploy code",e)}catch{await o.flashNotification("Hexo Deploy ERROR. See Browser Console","error");return}console.log("Hexo Deploy Done!"),await o.flashNotification("Hexo Deploy Done!")}async function k(){let e;console.log("hexo generate"),await o.flashNotification("Hexo Generating...");try{({code:e}=await a.run("hexo",["generate"])),console.log("Hexo generate code",e)}catch{await o.flashNotification("Hexo Generate ERROR. See Browser Console","error");return}console.log("Hexo Generate Done!"),await o.flashNotification("Hexo Generate Done!"),console.log("hexo deploy"),await o.flashNotification("Hexo Deploying...");try{({code:e}=await a.run("hexo",["deploy"])),console.log("Hexo deploy code",e)}catch{await o.flashNotification("Hexo Deploy ERROR. See Browser Console","error");return}console.log("Hexo Deploy Done!"),await o.flashNotification("Hexo Deploy Done!")}async function K(){console.log("killall hexo");try{let{code:e}=await a.run("killall",["hexo"]);console.log("Hexo stop server code",e)}catch{await o.flashNotification("Hexo Stop Server ERROR. See Browser Console","error");return}console.log("Hexo Stop Server Done!"),await o.flashNotification("Hexo Stop Server Done!")}async function B(){let e;console.log("git add . && git commit");let t=await o.prompt("Revision name:");t||(t="Snapshot"),console.log("Revision name",t);try{({code:e}=await a.run("git",["add","./*"])),console.log("Git add code",e)}catch{await o.flashNotification("Hexo Git Add ERROR. See Browser Console","error");return}try{({code:e}=await a.run("git",["commit","-a","-m",t])),console.log("Git commit code",e)}catch{}console.log("Hexo Git Commit Done!"),await o.flashNotification("Hexo Git Commit Done!")}async function O(){console.log("git push");try{let{code:e}=await a.run("git",["push"]);console.log("Git push code",e)}catch{await o.flashNotification("Hexo Git Push ERROR. See Browser Console","error");return}console.log("Hexo Git Push Done!"),await o.flashNotification("Hexo Git Push Done!")}async function I(){console.log("git pull");try{let{code:e}=await a.run("git",["pull"]);console.log("Git pull code",e)}catch{await o.flashNotification("Hexo Git Pull ERROR. See Browser Console","error");return}console.log("Hexo Git Pull Done!"),await o.flashNotification("Hexo Git Pull Done!")}async function W(){let e;console.log("git add . && git commit && git push");let t=await o.prompt("Revision name:");t||(t="Snapshot"),console.log("Revision name",t);try{({code:e}=await a.run("git",["add","./*"])),console.log("Git add code",e)}catch{await o.flashNotification("Hexo Git Add ERROR. See Browser Console","error");return}try{({code:e}=await a.run("git",["commit","-a","-m",t])),console.log("Git commit code",e)}catch{}try{({code:e}=await a.run("git",["push"])),console.log("Git push code",e)}catch{await o.flashNotification("Hexo Git Push ERROR. See Browser Console","error");return}console.log("Hexo Git Commit and Push Done!"),await o.flashNotification("Hexo Git Commit and Push Done!")}async function L(){let e=await o.prompt("Github Deploy(site) project URL (like: https://github.com/user/user.github.io):");if(!e)return;let t=await o.prompt("Github token:");if(!t)return;let n=e.split("/");n[2]=`${t}@${n[2]}`,e=n.join("/")+".git",await o.flashNotification("Now going to clone the deploy(site) repo, this may take some time.");try{let{code:i}=await a.run("git",["clone",e,".deploy_git"]);console.log("Git clone deploy code",i)}catch{await o.flashNotification("Hexo Clone Deploy ERROR. See Browser Console","error");return}console.log("Hexo Clone Deploy Repo Done!"),await o.flashNotification("Hexo Clone Deploy Repo Done!")}async function $(){let e=await o.prompt("Github project URL (like: https://github.com/user/project_source):");if(!e)return;let t=await o.prompt("Github token:");if(!t)return;let n=await o.prompt("Your name:");if(!n)return;let i=await o.prompt("Your email:");if(!i)return;let c=e.split("/");c[2]=`${t}@${c[2]}`,e=c.join("/")+".git",await o.flashNotification("Now Going to Clone the Project, This May Take Some Time...");try{let{code:s}=await a.run("git",["clone",e,"."]);console.log("Git clone space code",s)}catch{await o.flashNotification("Hexo Clone Space ERROR. See Browser Console","error");return}console.log("Hexo clone space done!"),await a.run("git",["config","user.name",n]),await a.run("git",["config","user.email",i]),await o.flashNotification("Hexo Clone Space Done!")}var j={uploadFile:H,npmInstall:R,init:D,newArticle:F,generate:M,clean:U,server:E,deploy:G,generateDeploy:k,stopServer:K,gitCommit:B,gitPush:O,gitPull:I,gitCommitPush:W,gitCloneDeployRepo:L,gitCloneSpace:$},q={name:"hexo",requiredPermissions:["shell"],functions:{uploadFile:{path:"hexo.ts:uploadFile",command:{name:"Hexo: Upload File"}},npmInstall:{path:"hexo.ts:npmInstall",command:{name:"Hexo: Npm Install"}},init:{path:"hexo.ts:init",command:{name:"Hexo: Init"}},newArticle:{path:"hexo.ts:newArticle",command:{name:"Hexo: New"}},generate:{path:"hexo.ts:generate",command:{name:"Hexo: Generate"}},clean:{path:"hexo.ts:clean",command:{name:"Hexo: Clean"}},server:{path:"hexo.ts:server",command:{name:"Hexo: Server"}},deploy:{path:"hexo.ts:deploy",command:{name:"Hexo: Deploy"}},generateDeploy:{path:"hexo.ts:generateDeploy",command:{name:"Hexo: Generate and Deploy"}},stopServer:{path:"hexo.ts:stopServer",command:{name:"Hexo: Stop Server"}},gitCommit:{path:"hexo.ts:gitCommit",command:{name:"Hexo: Git Commit"}},gitPush:{path:"hexo.ts:gitPush",command:{name:"Hexo: Git Push"}},gitPull:{path:"hexo.ts:gitPull",command:{name:"Hexo: Git Pull"}},gitCommitPush:{path:"hexo.ts:gitCommitPush",command:{name:"Hexo: Git Commit Push"}},gitCloneDeployRepo:{path:"hexo.ts:gitCloneDeployRepo",command:{name:"Hexo: Git Clone Deploy Repo"}},gitCloneSpace:{path:"hexo.ts:gitCloneSpace",command:{name:"Hexo: Git Clone Space"}}},assets:{}},wr={manifest:q,functionMapping:j};v(j,q);export{wr as plug};
